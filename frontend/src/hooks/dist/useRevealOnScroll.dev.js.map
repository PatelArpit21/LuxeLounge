{"version":3,"sources":["useRevealOnScroll.js"],"names":["useRevealOnScroll","root","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","target","classList","add","unobserve","rootMargin","threshold","candidates","document","querySelectorAll","el","observe","disconnect"],"mappings":";;;;;;;AAAA;;AAEe,SAASA,iBAAT,GAAwC;AAAA,MAAbC,IAAa,uEAAN,IAAM;AACrD,wBAAU,YAAM;AACd,QAAMC,QAAQ,GAAG,IAAIC,oBAAJ,CACf,UAACC,OAAD,EAAa;AACXA,MAAAA,OAAO,CAACC,OAAR,CAAgB,UAACC,KAAD,EAAW;AACzB,YAAIA,KAAK,CAACC,cAAV,EAA0B;AACxBD,UAAAA,KAAK,CAACE,MAAN,CAAaC,SAAb,CAAuBC,GAAvB,CAA2B,QAA3B;AACAR,UAAAA,QAAQ,CAACS,SAAT,CAAmBL,KAAK,CAACE,MAAzB;AACD;AACF,OALD;AAMD,KARc,EASf;AAAEP,MAAAA,IAAI,EAAJA,IAAF;AAAQW,MAAAA,UAAU,EAAE,kBAApB;AAAwCC,MAAAA,SAAS,EAAE;AAAnD,KATe,CAAjB;AAYA,QAAMC,UAAU,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,mCAA1B,CAAnB;AACAF,IAAAA,UAAU,CAACT,OAAX,CAAmB,UAACY,EAAD;AAAA,aAAQf,QAAQ,CAACgB,OAAT,CAAiBD,EAAjB,CAAR;AAAA,KAAnB;AAEA,WAAO;AAAA,aAAMf,QAAQ,CAACiB,UAAT,EAAN;AAAA,KAAP;AACD,GAjBD,EAiBG,CAAClB,IAAD,CAjBH;AAkBD","sourcesContent":["import { useEffect } from 'react';\r\n\r\nexport default function useRevealOnScroll(root = null) {\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      (entries) => {\r\n        entries.forEach((entry) => {\r\n          if (entry.isIntersecting) {\r\n            entry.target.classList.add('reveal');\r\n            observer.unobserve(entry.target);\r\n          }\r\n        });\r\n      },\r\n      { root, rootMargin: '0px 0px -10% 0px', threshold: 0.15 }\r\n    );\r\n\r\n    const candidates = document.querySelectorAll('.anim-fade, .anim-up, .anim-scale');\r\n    candidates.forEach((el) => observer.observe(el));\r\n\r\n    return () => observer.disconnect();\r\n  }, [root]);\r\n}"],"file":"useRevealOnScroll.dev.js"}