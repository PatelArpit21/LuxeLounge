{"version":3,"sources":["useRoomAvailability.js"],"names":["useRoomAvailability","isAvailable","availableRooms","message","loading","error","availability","setAvailability","checkAvailability","roomId","checkIn","checkOut","prev","api","post","room","check_in","check_out","response","data","is_available","available_rooms","errorMsg","resetAvailability"],"mappings":";;;;;;;AACA;;AACA;;;;;;;;;;;;;;;;;;AAEA,IAAMA,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAAA,kBACQ,qBAAS;AAC/CC,IAAAA,WAAW,EAAE,IADkC;AAE/CC,IAAAA,cAAc,EAAE,CAF+B;AAG/CC,IAAAA,OAAO,EAAE,EAHsC;AAI/CC,IAAAA,OAAO,EAAE,KAJsC;AAK/CC,IAAAA,KAAK,EAAE;AALwC,GAAT,CADR;AAAA;AAAA,MACzBC,YADyB;AAAA,MACXC,eADW;;AAShC,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAOC,MAAP,EAAeC,OAAf,EAAwBC,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACpB,CAACF,MAAD,IAAW,CAACC,OAAZ,IAAuB,CAACC,QADJ;AAAA;AAAA;AAAA;;AAEtBJ,YAAAA,eAAe,CAAC;AACdN,cAAAA,WAAW,EAAE,KADC;AAEdC,cAAAA,cAAc,EAAE,CAFF;AAGdC,cAAAA,OAAO,EAAE,8BAHK;AAIdC,cAAAA,OAAO,EAAE,KAJK;AAKdC,cAAAA,KAAK,EAAE;AALO,aAAD,CAAf;AAFsB;;AAAA;AAYxBE,YAAAA,eAAe,CAAC,UAAAK,IAAI;AAAA,uCAAUA,IAAV;AAAgBR,gBAAAA,OAAO,EAAE,IAAzB;AAA+BC,gBAAAA,KAAK,EAAE;AAAtC;AAAA,aAAL,CAAf;AAZwB;AAAA;AAAA,4CAeCQ,gBAAIC,IAAJ,CAAS,+BAAT,EAA0C;AAC/DC,cAAAA,IAAI,EAAEN,MADyD;AAE/DO,cAAAA,QAAQ,EAAEN,OAFqD;AAG/DO,cAAAA,SAAS,EAAEN;AAHoD,aAA1C,CAfD;;AAAA;AAehBO,YAAAA,QAfgB;AAqBtBX,YAAAA,eAAe,CAAC;AACdN,cAAAA,WAAW,EAAEiB,QAAQ,CAACC,IAAT,CAAcC,YADb;AAEdlB,cAAAA,cAAc,EAAEgB,QAAQ,CAACC,IAAT,CAAcE,eAFhB;AAGdlB,cAAAA,OAAO,EAAEe,QAAQ,CAACC,IAAT,CAAchB,OAHT;AAIdC,cAAAA,OAAO,EAAE,KAJK;AAKdC,cAAAA,KAAK,EAAE;AALO,aAAD,CAAf;AArBsB,6CA6Bfa,QAAQ,CAACC,IAAT,CAAcC,YA7BC;;AAAA;AAAA;AAAA;AA+BhBE,YAAAA,QA/BgB,GA+BL,YAAMnB,OAAN,IAAiB,8BA/BZ;AAgCtBI,YAAAA,eAAe,CAAC;AACdN,cAAAA,WAAW,EAAE,KADC;AAEdC,cAAAA,cAAc,EAAE,CAFF;AAGdC,cAAAA,OAAO,EAAEmB,QAHK;AAIdlB,cAAAA,OAAO,EAAE,KAJK;AAKdC,cAAAA,KAAK,EAAEiB;AALO,aAAD,CAAf;AAhCsB,6CAuCf,KAvCe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AA2CA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9BhB,IAAAA,eAAe,CAAC;AACdN,MAAAA,WAAW,EAAE,IADC;AAEdC,MAAAA,cAAc,EAAE,CAFF;AAGdC,MAAAA,OAAO,EAAE,EAHK;AAIdC,MAAAA,OAAO,EAAE,KAJK;AAKdC,MAAAA,KAAK,EAAE;AALO,KAAD,CAAf;AAOD,GARD;;AAUA,SAAO;AAAEC,IAAAA,YAAY,EAAZA,YAAF;AAAgBE,IAAAA,iBAAiB,EAAjBA,iBAAhB;AAAmCe,IAAAA,iBAAiB,EAAjBA;AAAnC,GAAP;AACD,CA/DD;;eAiEevB,mB","sourcesContent":["// src/hooks/useRoomAvailability.js\r\nimport { useState } from 'react';\r\nimport api from '../services/api';\r\n\r\nconst useRoomAvailability = () => {\r\n  const [availability, setAvailability] = useState({\r\n    isAvailable: true,\r\n    availableRooms: 0,\r\n    message: '',\r\n    loading: false,\r\n    error: null\r\n  });\r\n\r\n  const checkAvailability = async (roomId, checkIn, checkOut) => {\r\n    if (!roomId || !checkIn || !checkOut) {\r\n      setAvailability({\r\n        isAvailable: false,\r\n        availableRooms: 0,\r\n        message: 'Please select room and dates',\r\n        loading: false,\r\n        error: null\r\n      });\r\n      return;\r\n    }\r\n\r\n    setAvailability(prev => ({ ...prev, loading: true, error: null }));\r\n\r\n    try {\r\n      const response = await api.post('/bookings/check_availability/', {\r\n        room: roomId,\r\n        check_in: checkIn,\r\n        check_out: checkOut\r\n      });\r\n\r\n      setAvailability({\r\n        isAvailable: response.data.is_available,\r\n        availableRooms: response.data.available_rooms,\r\n        message: response.data.message,\r\n        loading: false,\r\n        error: null\r\n      });\r\n\r\n      return response.data.is_available;\r\n    } catch (error) {\r\n      const errorMsg = error.message || 'Failed to check availability';\r\n      setAvailability({\r\n        isAvailable: false,\r\n        availableRooms: 0,\r\n        message: errorMsg,\r\n        loading: false,\r\n        error: errorMsg\r\n      });\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const resetAvailability = () => {\r\n    setAvailability({\r\n      isAvailable: true,\r\n      availableRooms: 0,\r\n      message: '',\r\n      loading: false,\r\n      error: null\r\n    });\r\n  };\r\n\r\n  return { availability, checkAvailability, resetAvailability };\r\n};\r\n\r\nexport default useRoomAvailability;"],"file":"useRoomAvailability.dev.js"}