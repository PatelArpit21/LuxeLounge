{"version":3,"sources":["api.js"],"names":["api","axios","create","baseURL","headers","interceptors","request","use","config","stored","localStorage","getItem","JSON","parse","token","Authorization","e","response","error","data","non_field_errors","message","firstKey","Object","keys","Promise","reject"],"mappings":";;;;;;;AACA;;;;;;AAEA,IAAMA,GAAG,GAAGC,kBAAMC,MAAN,CAAa;AACvBC,EAAAA,OAAO,EAAE,2BADc;AAEvBC,EAAAA,OAAO,EAAE;AAAE,oBAAgB;AAAlB;AAFc,CAAb,CAAZ;;AAKAJ,GAAG,CAACK,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB,CAA6B,UAACC,MAAD,EAAY;AACvC,MAAI;AACF,QAAMC,MAAM,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAf;;AACA,QAAIF,MAAJ,EAAY;AAAA,wBACQG,IAAI,CAACC,KAAL,CAAWJ,MAAX,CADR;AAAA,UACFK,KADE,eACFA,KADE;;AAEV,UAAIA,KAAJ,EAAW;AACTN,QAAAA,MAAM,CAACJ,OAAP,GAAiBI,MAAM,CAACJ,OAAP,IAAkB,EAAnC;AACAI,QAAAA,MAAM,CAACJ,OAAP,CAAeW,aAAf,oBAAyCD,KAAzC;AACD;AACF;AACF,GATD,CASE,OAAOE,CAAP,EAAU,CACV;AACD;;AACD,SAAOR,MAAP;AACD,CAdD,E,CAgBA;;AACAR,GAAG,CAACK,YAAJ,CAAiBY,QAAjB,CAA0BV,GAA1B,CACE,UAACU,QAAD;AAAA,SAAcA,QAAd;AAAA,CADF,EAEE,UAACC,KAAD,EAAW;AACT,MAAIA,KAAK,CAACD,QAAN,IAAkBC,KAAK,CAACD,QAAN,CAAeE,IAArC,EAA2C;AACzC;AACA,QAAID,KAAK,CAACD,QAAN,CAAeE,IAAf,CAAoBC,gBAAxB,EAA0C;AACxCF,MAAAA,KAAK,CAACG,OAAN,GAAgBH,KAAK,CAACD,QAAN,CAAeE,IAAf,CAAoBC,gBAApB,CAAqC,CAArC,CAAhB;AACD,KAFD,MAEO,IAAI,QAAOF,KAAK,CAACD,QAAN,CAAeE,IAAtB,MAA+B,QAAnC,EAA6C;AAClD;AACA,UAAMG,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAYN,KAAK,CAACD,QAAN,CAAeE,IAA3B,EAAiC,CAAjC,CAAjB;AACAD,MAAAA,KAAK,CAACG,OAAN,GAAgBH,KAAK,CAACD,QAAN,CAAeE,IAAf,CAAoBG,QAApB,EAA8B,CAA9B,CAAhB;AACD,KAJM,MAIA;AACLJ,MAAAA,KAAK,CAACG,OAAN,GAAgBH,KAAK,CAACD,QAAN,CAAeE,IAA/B;AACD;AACF;;AACD,SAAOM,OAAO,CAACC,MAAR,CAAeR,KAAf,CAAP;AACD,CAhBH;eAmBelB,G","sourcesContent":["// src/services/api.js\r\nimport axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'http://127.0.0.1:8000/api',\r\n  headers: { 'Content-Type': 'application/json' },\r\n});\r\n\r\napi.interceptors.request.use((config) => {\r\n  try {\r\n    const stored = localStorage.getItem('luxeAuth');\r\n    if (stored) {\r\n      const { token } = JSON.parse(stored);\r\n      if (token) {\r\n        config.headers = config.headers || {};\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    // ignore\r\n  }\r\n  return config;\r\n});\r\n\r\n// Add response interceptor to handle errors\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response && error.response.data) {\r\n      // Extract error message from response\r\n      if (error.response.data.non_field_errors) {\r\n        error.message = error.response.data.non_field_errors[0];\r\n      } else if (typeof error.response.data === 'object') {\r\n        // Get the first error message from the response\r\n        const firstKey = Object.keys(error.response.data)[0];\r\n        error.message = error.response.data[firstKey][0];\r\n      } else {\r\n        error.message = error.response.data;\r\n      }\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api;"],"file":"api.dev.js"}